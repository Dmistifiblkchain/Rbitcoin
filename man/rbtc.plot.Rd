% Generated by roxygen2: do not edit by hand
\name{rbtc.plot}
\alias{Rbitcoin.plot}
\alias{rbtc.plot}
\title{Plot Rbitcoin objects}
\usage{
rbtc.plot(x, ..., verbose = getOption("Rbitcoin.verbose", 0))
}
\arguments{
\item{x}{object to be plotted, result of Rbitcoin function, currently supported: \code{market.api.process(action=c("trades","order_book"))} and \code{wallet_manager}.}

\item{verbose}{integer. Rbitcoin processing messages, print to console if \code{verbose > 0}, each subfunction reduce \code{verbose} by 1. If missing then \code{getOption("Rbitcoin.verbose",0)} is used.}

\item{\dots}{additional params to be passed to particular plot function.}
}
\value{
by side effect a base plot.
}
\description{
Generic function to plot different objects returned by some Rbitcoin functions.
}
\note{
For wallet manager plot legend may not scale well in interactive viewer, for better scaling save plot to file, see examples.
}
\examples{
\dontrun{
# fetch trades
trades <- market.api.process('kraken',c('BTC','EUR'),'trades')
# plot trades
rbtc.plot(trades)
# fetch order_book
order_book <- market.api.process('kraken',c('LTC','EUR'),'order_book')
# plot order book
rbtc.plot(order_book)
rbtc.plot(order_book, limit_pct = 0.5)
# plot wallet_manager archive to svg file
wallet_dt <- wallet_manager(archive_write=FALSE, archive_read=TRUE)
svg("wallet_value.svg")
rbtc.plot(wallet_dt)
dev.off()
}
}
\seealso{
\code{\link{rbtc.plot.trades}}, \code{\link{rbtc.plot.order_book}}, \code{\link{rbtc.plot.wallet_manager}}
}

